{"version":3,"sources":["assets/img/upah.png","assets/img/Mockup.png","serviceWorker.js","components/Navbar/Navbar.jsx","pages/LandingPages/LandingPages.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","NavBar","react_default","a","createElement","Navbar","bg","variant","fixed","Brand","href","alt","src","Logo","width","className","Toggle","aria-controls","Collapse","id","Nav","Link","Component","LandingPages","components_Navbar_Navbar","Container","fluid","Row","Col","md","Mockup","ReactDOM","render","react_router_dom","react_router","exact","path","process","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6MCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wKCcSC,0LAvBP,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,MAAM,OACrCN,EAAAC,EAAAC,cAACC,EAAA,EAAOI,MAAR,CAAcC,KAAK,SACfR,EAAAC,EAAAC,cAAA,OACIO,IAAI,GACJC,IAAKC,IACLC,MAAM,QACNC,UAAU,8BAGlBb,EAAAC,EAAAC,cAACC,EAAA,EAAOW,OAAR,CAAeC,gBAAc,qBAC7Bf,EAAAC,EAAAC,cAACC,EAAA,EAAOa,SAAR,CAAiBC,GAAG,oBAChBjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAKL,UAAU,WACXb,EAAAC,EAAAC,cAACgB,EAAA,EAAIC,KAAL,CAAUX,KAAK,UAAf,YACAR,EAAAC,EAAAC,cAACgB,EAAA,EAAIC,KAAL,CAAUX,KAAK,YAAf,WACAR,EAAAC,EAAAC,cAACgB,EAAA,EAAIC,KAAL,CAAUX,KAAK,aAAf,sBAjBHY,+BC8CNC,mLAzCP,OACIrB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,QACXb,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAWC,OAAK,EAACX,UAAU,iCACvBb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCACXb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACXb,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,WAAR,oBAA8BF,EAAAC,EAAAC,cAAA,WAA9B,sBACAF,EAAAC,EAAAC,cAAA,KAAGW,UAAU,eAAeL,KAAK,UAAjC,iBAIZR,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAWC,OAAK,EAACX,UAAU,eAAeI,GAAG,SACzCjB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACIzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKC,GAAI,EAAGd,UAAU,iBAClBb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCACXb,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,QAAMW,UAAU,cAChBb,EAAAC,EAAAC,cAAA,kYAAyXF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAA9X,kgBAC+fF,EAAAC,EAAAC,cAAA,WAD/f,IACsgBF,EAAAC,EAAAC,cAAA,WADtgB,4UAKRF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKC,GAAI,EAAGd,UAAU,iBAClBb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACXb,EAAAC,EAAAC,cAAA,OACIO,IAAI,GACJC,IAAKkB,IACLhB,MAAM,QACNC,UAAU,0CA/BvBO,aCE3BS,IAASC,OACL9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACIhC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,cAA8BC,UAAWf,OAIpEgB,SAASC,eAAe,SH6GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4bf7c6b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/upah.7f34d89c.png\";","module.exports = __webpack_public_path__ + \"static/media/Mockup.66e2402a.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\n\r\n// others\r\nimport Logo from \"../../assets/img/upah.png\";\r\nimport \"./Navbar.sass\";\r\n\r\nclass NavBar extends Component{\r\n    render(){\r\n        return(\r\n            <Navbar bg=\"light\" variant=\"light\" fixed=\"top\" >\r\n                <Navbar.Brand href=\"#home\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src={Logo}\r\n                        width=\"100px\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#about\">About Us</Nav.Link>\r\n                        <Nav.Link href=\"#product\">Product</Nav.Link>\r\n                        <Nav.Link href=\"#location\">Location</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\n// import { Route, Switch, withRouter } from \"react-router\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport \"./LandingPages.sass\";\r\n\r\n// impoert pages\r\nimport NavBar from \"../../components/Navbar/Navbar\";\r\n\r\nimport Mockup from \"../../assets/img/Mockup.png\";\r\n\r\nclass LandingPages extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <NavBar />\r\n                <div className=\"apps\">\r\n                    <Container fluid className=\"background-image outer-center\">\r\n                        <div className=\"container-text middle-center\">\r\n                            <div className=\"inner-center text-style\">\r\n                                <h1>Yes!<br/> We have solution<br/> for this problem!</h1>\r\n                                <a className=\"button-green\" href=\"#about\">Learn More</a>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                    <Container fluid className=\"outer-center\" id=\"about\">\r\n                        <Row>\r\n                            <Col md={8} className=\"middle-center\">\r\n                                <div className=\"inner-center text-style font-black\">\r\n                                    <h2>About Us</h2>\r\n                                    <span className=\"greenline\"></span>\r\n                                    <p>Garbage is a big problem for big cities, specifically Jakarta. According to CNBC Indonesia news, the volume of garbage in Jabodetabek has increased by 17 tons within 12 hours. Until now, the right solution has not been found to overcome this problem. In addition, we also hear a lot of news about animals that are victims of inorganic rubbish that is disposed of carelessly.<br/><br/>\r\n                                    We are here to collaborate with the community in collecting and sorting waste using AI technology and Smartphones. People who want to orderly dispose of trash in their place need to be given appreciation. Through the Apps and Technology that we build, we will give points to every waste specifically inorganic waste that is disposed of in our place. We will hand over the inorganic waste to the recycling industry to be processed according to applicable procedures so as not to pollute our soil, water and air. <br /> <br/>\r\n                                        UPAH is a digital start-up company engaged in the environment, which has a main focus on collecting inorganic waste using AI technology. At present, UPAH is designing applications that are user friendly and the hardware used for implementing the AI system. The plan, the prototype will be tested at the beginning of July 2019.</p>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={4} className=\"middle-center\">\r\n                                <div className=\"inner-center text-style\">\r\n                                    <img\r\n                                        alt=\"\"\r\n                                        src={Mockup}\r\n                                        width=\"250px\"\r\n                                        className=\"d-inline-block align-top\"\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPages;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router\";\n\n// utilities\nimport * as serviceWorker from './serviceWorker';\n\n// pages\nimport LandingPages from './pages/LandingPages/LandingPages'\n\n\nReactDOM.render(\n    <Router>\n      <div>\n        <Switch>\n            <Route exact path={process.env.PUBLIC_URL + '/'} component={LandingPages} />\n        </Switch>\n      </div>\n    </Router>,\n    document.getElementById(\"root\")\n  );\n  \n  serviceWorker.unregister();\n  \n"],"sourceRoot":""}